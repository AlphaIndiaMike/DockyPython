<!DOCTYPE html>
<html><head>
	<meta http-equiv="Content-type" content="text/html; charset=UTF-8">
	<title>JQuery Validation Engine</title>
	<link rel="stylesheet" href="JQuery%20Validation%20Engine_files/validationEngine.css" type="text/css">
	<link rel="stylesheet" href="JQuery%20Validation%20Engine_files/template.css" type="text/css">
	<script src="JQuery%20Validation%20Engine_files/jquery-1.js" type="text/javascript">
	</script>
	<script src="JQuery%20Validation%20Engine_files/jquery_002.js" type="text/javascript" charset="utf-8">
	</script>
	<script src="JQuery%20Validation%20Engine_files/jquery.js" type="text/javascript" charset="utf-8">
	</script>
	<script>
		jQuery(document).ready(function(){
			// binds form submission and fields to the validation engine
			jQuery("#formID").validationEngine();
		});

		/**
		*
		* @param {jqObject} the field where the validation applies
		* @param {Array[String]} validation rules for this field
		* @param {int} rule index
		* @param {Map} form options
		* @return an error string if validation failed
		*/
		function checkHELLO(field, rules, i, options){
			if (field.val() != "HELLO") {
				// this allows to use i18 for the error msgs
				return options.allrules.validate2fields.alertText;
			}
		}
	</script>
</head>
<body>
	<p>
		<a href="#" onclick="alert('is the form valid? '+jQuery('#formID').validationEngine('validate'))">Evaluate form</a>
		| <a href="#" onclick="jQuery('#sport').validationEngine('validate')">Validate sport1 select field</a>
		| <a href="#" onclick="jQuery('#sport').validationEngine('hide')">Close favorite sport 1 prompt</a>
		| <a href="#" onclick="jQuery('#formID').validationEngine('hide')">Close all prompts on form</a>
		| <a href="#" onclick="jQuery('#formID').validationEngine('updatePromptsPosition')">Update all prompts positions</a>
		| <a href="#" onclick="jQuery('#test').validationEngine('showPrompt', 'This is an example', 'pass')">Build a prompt on a div</a>
		| <a href="#" onclick="jQuery('#test').validationEngine('hide')">Close div prompt</a>
		| <a href="http://www.position-relative.net/creation/formValidator/index.html">Back to index</a>
	</p>
	<p>
		This demonstration shows the different validators available
		<br>
	</p>
	<div id="test" class="test" style="width:150px;">This is a div element</div>
	<form id="formID" class="formular" method="post">
		<fieldset>
			<legend>
				Required!
			</legend>
			<label>
				<span>Field is required : </span>
				<input class="validate[required] text-input" name="req" id="req" type="text">
			</label>
			<legend>
				Placeholder &amp; required
			</legend>
			<label>
				<span>Field is required : </span>
				<input value="This is a placeholder" data-validation-placeholder="This is a placeholder" class="validate[required] text-input" name="reqplaceholder" id="reqplaceholder" type="text">
			</label>
			<label>
				<span>Favorite sport 1:</span>
				<select name="sport" id="sport" class="validate[required]">
					<option selected="selected" value="">Choose a sport</option>
					<option value="option1">Tennis</option>
					<option value="option2">Football</option>
					<option value="option3">Golf</option>
				</select>
			</label>
			<label>
				<span>Favorite sport 2:</span>
				<select name="sport2" id="sport2" multiple="multiple" class="validate[required]">
					<option value="">Choose a sport</option>
					<option value="option1">Tennis</option>
					<option value="option2">Football</option>
					<option value="option3">Golf</option>
				</select>
			</label>
			<br>
			validate[required]
		</fieldset>
			
		<fieldset>
			<legend>
				Custom
			</legend>
			<label>
				<p>Comes with many predifined regex (phone, url, ip, email..etc)</p>
				<a href="http://www.position-relative.net/creation/formValidator/demos/demoRegExp.html">[DEMO]</a>
				<br>
				<span>Enter a URL : </span>
				<input value="http://" class="validate[required,custom[url]] text-input" name="url" id="url" type="text">
				<br>
				validate[required,custom[url]]
			</label>
		</fieldset>
			
		<fieldset>
			<legend>
				Equals
			</legend>
			<label>
				<span>Password : </span>
				<input value="karnius" class="validate[required] text-input" name="password" id="password" type="password">
			</label>
			<label>
				<span>Confirm password : </span>
				<input value="kaniusBAD" class="validate[required,equals[password]] text-input" name="password2" id="password2" type="password">
				<br>
				validate[required,equals[password]]
			</label>
		</fieldset>
			
		<fieldset>
			<legend>
				Function
			</legend>
			<label>
				<span>Write 'HELLO' : </span>
				<input class="validate[required,funcCall[checkHELLO]] text-input" id="lastname" name="lastname" type="text">
				<br>
				validate[required,funcCall[checkHELLO]]
			</label>
		</fieldset>
			
		<fieldset>
			<legend>
				Conditional required
			</legend>
			<label>
				<span>Depending field (1): </span>
				<input class="text-input" name="dep1" id="dep1" type="text">
			</label>
			<label>
				<span>This field is required if above field has a value : </span>
				<input class="validate[condRequired[dep1]] text-input" name="conditionalrequired1" id="conditionalrequired1" type="text">
                                <br>
				validate[condRequired[dep1]]
			</label>
                        
			<label>
                                <br>
                                <strong>OR with 2 depending fields</strong><br>
                                <br>
				<span>Depending field (2a) : </span>
				<input class="text-input" name="dep2a" id="dep2a" type="text">
			</label>
			<label>
				<span>Depending field (2b) : </span>
				<input class="text-input" name="dep2b" id="dep2b" type="text">
			</label>
			<label>
				<span>This field is required if any of above fields has a value : </span>
				<input class="validate[condRequired[dep2a,dep2b]] text-input" name="conditionalrequired2" id="conditionalrequired2" type="text">
                                <br>
				validate[condRequired[dep2a,dep2b]]
			</label>
                    
		</fieldset>
			
		<fieldset>
			<legend>
				MinSize
			</legend>
			<label>
				Minimum field size
				<br>
				<input class="validate[required,minSize[6]] text-input" name="minsize" id="minsize" type="text">
				<br>
				validate[required,minSize[6]]
			</label>
		</fieldset>
			
		<fieldset>
			<legend>
				MaxSize
			</legend>
			<label>
				Maximum field size, optional
				<br>
				<input value="0123456789" class="validate[optional,maxSize[6]] text-input" name="maxsize" id="maxsize" type="text">
				<br>
				validate[maxSize[6]]<br>
				note that the field is optional - it won't fail if it has no value
			</label>
		</fieldset>
			
		<fieldset>
			<legend>
				Min
			</legend>
			<label>
				integer &gt;= -5
				<br>
				<input value="-7" class="validate[required,custom[integer],min[-5]] text-input" name="min" id="min" type="text">
				<br>
				validate[required,custom[integer],min[-5]]
			</label>
		</fieldset>
			
		<fieldset>
			<legend>
				Max
			</legend>
			<label>
				integer ,50]
				<br>
				<input value="55" class="validate[required,custom[integer],max[50]] text-input" name="max" id="max" type="text">
				<br>
				validate[required,custom[integer],max[50]]
			</label>
		</fieldset>
			
		<fieldset>
			<legend>
				Past
			</legend>
			<label>
				Checks that the value is a date in the past
				<br>
				<span>Please enter a date ealier than 2010/01/01</span>
				<input value="2009/06/30" class="validate[custom[date],past[2010/01/01]] text-input" name="past" id="past" type="text">
				<br>
				validate[custom[date],past[2010/01/01]]
			</label>
		</fieldset>
			
		<fieldset>
			<legend>
				Future
			</legend>
			<label>
				Checks that the value is a date in the future
				<br>
				<span>Please enter a date older than today's date</span>
				<input value="2011-01-" class="validate[custom[date],future[NOW]] text-input" name="future" id="future" type="text">
				<br>
				validate[custom[date],future[NOW]]<br><br>
		</label></fieldset>
			
		<fieldset>
			<legend>
				Group required
			</legend>
			<label>
				Checks if at least one of the input is not empty.
				<br>
				<br>
				<span>Please enter a credit card</span>
			</label>
			<input class="validate[groupRequired[payments]] text-input" name="creditcard1" id="creditcard1" type="text">
			<label><strong>OR</strong></label><br>
			<label>Please enter a paypal acccount</label>
			<input class="validate[groupRequired[payments],custom[email]] text-input" name="paypal" id="paypal" type="text">
			<label><strong>OR</strong></label><br>
			<label>Please enter a bank account</label>
			<input class="validate[groupRequired[payments],custom[integer]] text-input" name="bank" id="bank" type="text">
			<label><strong>OR</strong></label><br>
			<label>Please  choose from select</label>
			<select class="validate[groupRequired[payments]] text-input" type="text" name="bank2" id="bank2">
				<option selected="selected" value="">Choose a payment option</option>
				<option value="Paypal">Paypal</option>
				<option value="Bank">Bank account</option>
			</select>
		</fieldset>
			
		<fieldset>
			<legend>
				Date Range<br>
			</legend>
			<label>
				Checks that the start date is before the end date.
				Please enter an end date ealier than the start date<br><br>
				<label for="date1">Start Date : </label>
				<input value="9/1/2009" class="validate[dateRange[grp1]]" id="date1" type="text">
			</label>
			<label>
				<label for="date2">End Date : </label>
				<input value="3/18/1985" class="validate[dateRange[grp1]]" id="date2" type="text">
				<br>
				validate[dateRange[grp1]]<br>
				Note* Both fields must have the same name
			</label>
		</fieldset>
		<fieldset>
			<label>
				<span>Field is required with function : </span>
				<input class="validate[required, custom[requiredInFunction]] text-input" name="req3" id="req3" type="text">
			</label>
		</fieldset>
		<fieldset>
			<legend>
				Date Time Range<br>
			</legend>
			<label>
				Checks that the start date and time are before the end date and time.
				Please enter an end date ealier than the start date<br><br>
				<label for="date1">Start Date Time: </label>
				<input value="9/1/2009 9:30:00 PM" class="validate[dateTimeRange[grp2]]" id="datetime1" type="text">
			</label>
			<label>
				<label for="date2">End Date Time: </label>
				<input value="9/1/2009 2:30:00 AM" class="validate[dateTimeRange[grp2]]" id="datetime2" type="text">
				<br>
				validate[dateTimeRange[grp2]<br>
				Note* Both fields must have the same name
			</label>
		</fieldset>
		
		<fieldset>
			<script>
		/**
		* 
		* @param {input[type=checkbox]} the checkbox to read
		* @param {input[type=textbox]} the field bound to the checkbox that gets enabled or disabled
		*/
		    function ToggleState(checkbox, field) {
					if ($(checkbox).attr('checked'))
						$(field).attr('disabled', 'disabled');
					else
						$(field).removeAttr('disabled');
		    }
			</script>
			<legend>
				Date compare<br>
			</legend>

				Checks that the first date is before the second date.
				Please enter the second date ealier than the first date<br><br>
				<label>First Date :<br>
					<input class="checkbox" name="name1" id="name1" onclick="javascript:ToggleState('#name1', '#dateCmp1');" type="checkbox">
					<i>Disable first date field</i><br>
				</label>
				<input value="2011/3/4" class="validate[custom[date],past[#dateCmp2]]" name="dateCmp1" id="dateCmp1" type="text">
				<br>
				validate[custom[date],past[#dateCmp2]]<br><br>
				<label>Second Date :<br>
					<input class="checkbox" name="name2" id="name2" onclick="javascript:ToggleState('#name2', '#dateCmp2');" type="checkbox">
					<i>Disable second date field</i><br>
				</label>
				<input value="2010/1/2" class="validate[custom[date],future[#dateCmp1]]" name="dateCmp2" id="dateCmp2" type="text">
				<br>
				validate[custom[date],future[#dateCmp1]]<br>
		</fieldset>

		<fieldset>
			<legend>
				Credit Card
			</legend>
			<label>
				Checks that the credit card number is at least theoretically valid, according the to the
				<a href="http://en.wikipedia.org/wiki/Luhn_algorithm">Luhn checksum algorithm</a>, but not
				whether the specific card number is active with a bank, etc.

				<br>
				<br>
				Since credit cards are often presented in different formats, spaces and
				hyphens (' ','-') are simply ignored.

				<br>
				<br>
				Examples:<br>
				<ul>
					<li>4111 1111 1111 1111</li>
					<li>3737-321345-610004</li>
				</ul>
				<a href="http://www.paypalobjects.com/en_US/vhelp/paypalmanager_help/credit_card_numbers.htm">More examples</a>
				<br>
				<input class="validate[required,creditCard] text-input" name="creditcard2" id="creditcard2" type="text">
				<br>
				validate[required,creditCard]
			</label>
		</fieldset>

		<fieldset>
			<legend>
				Checkbox
			</legend>
			<label>
				Check this <a href="http://www.position-relative.net/creation/formValidator/demos/demoCheckBox.html">[DEMO]</a>
			</label>
		</fieldset>
		<fieldset>
			<legend>
				Ajax
			</legend>
			<label>
				Check this <a href="http://www.position-relative.net/creation/formValidator/demos/demoAjaxSubmitPHP.html">[DEMO]</a>
			</label>
		</fieldset>
		<input class="submit" value="Validate &amp; Send the form!" type="submit"><hr>
	</form>


</body></html>